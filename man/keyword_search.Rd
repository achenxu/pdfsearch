% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/keyword_search.r
\name{keyword_search}
\alias{keyword_search}
\title{Function to search pdf for keywords}
\usage{
keyword_search(x, keyword, path = FALSE, split_pdf = FALSE,
  surround_lines = FALSE, ignore.case = FALSE, heading_search = FALSE,
  heading_args = NULL)
}
\arguments{
\item{x}{Either the text of the pdf read in with the pdftools package or a path
for the location of the pdf file.}

\item{keyword}{The keyword(s) to be used to search in the text. Multiple 
keywords can be specified with a character vector.}

\item{path}{An optional path designation for the location of the pdf to be converted 
to text. The pdftools package is used for this conversion.}

\item{split_pdf}{TRUE/FALSE indicating whether to split the pdf using white space.
This would be most useful with multicolumn pdf files. The split_pdf function
attempts to recreate the column layout of the text.}

\item{surround_lines}{numeric/FALSE indicating whether the output should extract the 
surrouding lines of text in addition to the matching line. Default is FALSE, if 
not false, include a numeric number that indicates the additional number of 
surrounding lines that will be extracted.}

\item{ignore.case}{TRUE/FALSE/vector of TRUE/FALSE, indicating whether the case of the keyword matters. 
Default is FALSE meaning that case of the keyword is literal. If a vector, 
must be same length as the keyword vector.}

\item{heading_search}{TRUE/FALSE indicating whether to search for headings in the pdf.}

\item{heading_args}{A list of arguments to pass on to the \code{\link{heading_search}} function.
See \code{\link{heading_search}} for more details on arguments needed.}
}
\description{
This function is able to return keyword locations indicating the line of the text
as well as the page number that the keyword is found in.
}

